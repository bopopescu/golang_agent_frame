// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rinck.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 心跳包
type Heartbeat struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Synctime             string   `protobuf:"bytes,2,opt,name=Synctime,proto3" json:"Synctime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab3fb7ffd345c3b, []int{0}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Heartbeat) GetSynctime() string {
	if m != nil {
		return m.Synctime
	}
	return ""
}

// shell执行命令
type ShellRun struct {
	Runcmd               string   `protobuf:"bytes,1,opt,name=Runcmd,proto3" json:"Runcmd,omitempty"`
	Taskid               string   `protobuf:"bytes,2,opt,name=Taskid,proto3" json:"Taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellRun) Reset()         { *m = ShellRun{} }
func (m *ShellRun) String() string { return proto.CompactTextString(m) }
func (*ShellRun) ProtoMessage()    {}
func (*ShellRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab3fb7ffd345c3b, []int{1}
}

func (m *ShellRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShellRun.Unmarshal(m, b)
}
func (m *ShellRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShellRun.Marshal(b, m, deterministic)
}
func (m *ShellRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellRun.Merge(m, src)
}
func (m *ShellRun) XXX_Size() int {
	return xxx_messageInfo_ShellRun.Size(m)
}
func (m *ShellRun) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellRun.DiscardUnknown(m)
}

var xxx_messageInfo_ShellRun proto.InternalMessageInfo

func (m *ShellRun) GetRuncmd() string {
	if m != nil {
		return m.Runcmd
	}
	return ""
}

func (m *ShellRun) GetTaskid() string {
	if m != nil {
		return m.Taskid
	}
	return ""
}

// shell执行命令返回
type ShellRunRsp struct {
	RuncmdRsp            string   `protobuf:"bytes,1,opt,name=RuncmdRsp,proto3" json:"RuncmdRsp,omitempty"`
	Taskid               string   `protobuf:"bytes,2,opt,name=Taskid,proto3" json:"Taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellRunRsp) Reset()         { *m = ShellRunRsp{} }
func (m *ShellRunRsp) String() string { return proto.CompactTextString(m) }
func (*ShellRunRsp) ProtoMessage()    {}
func (*ShellRunRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab3fb7ffd345c3b, []int{2}
}

func (m *ShellRunRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShellRunRsp.Unmarshal(m, b)
}
func (m *ShellRunRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShellRunRsp.Marshal(b, m, deterministic)
}
func (m *ShellRunRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellRunRsp.Merge(m, src)
}
func (m *ShellRunRsp) XXX_Size() int {
	return xxx_messageInfo_ShellRunRsp.Size(m)
}
func (m *ShellRunRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellRunRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ShellRunRsp proto.InternalMessageInfo

func (m *ShellRunRsp) GetRuncmdRsp() string {
	if m != nil {
		return m.RuncmdRsp
	}
	return ""
}

func (m *ShellRunRsp) GetTaskid() string {
	if m != nil {
		return m.Taskid
	}
	return ""
}

// 文件传输封装
type FileTrans struct {
	SrcFilename          string   `protobuf:"bytes,1,opt,name=SrcFilename,proto3" json:"SrcFilename,omitempty"`
	DstFilename          string   `protobuf:"bytes,2,opt,name=DstFilename,proto3" json:"DstFilename,omitempty"`
	FileContent          []byte   `protobuf:"bytes,3,opt,name=FileContent,proto3" json:"FileContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileTrans) Reset()         { *m = FileTrans{} }
func (m *FileTrans) String() string { return proto.CompactTextString(m) }
func (*FileTrans) ProtoMessage()    {}
func (*FileTrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab3fb7ffd345c3b, []int{3}
}

func (m *FileTrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileTrans.Unmarshal(m, b)
}
func (m *FileTrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileTrans.Marshal(b, m, deterministic)
}
func (m *FileTrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileTrans.Merge(m, src)
}
func (m *FileTrans) XXX_Size() int {
	return xxx_messageInfo_FileTrans.Size(m)
}
func (m *FileTrans) XXX_DiscardUnknown() {
	xxx_messageInfo_FileTrans.DiscardUnknown(m)
}

var xxx_messageInfo_FileTrans proto.InternalMessageInfo

func (m *FileTrans) GetSrcFilename() string {
	if m != nil {
		return m.SrcFilename
	}
	return ""
}

func (m *FileTrans) GetDstFilename() string {
	if m != nil {
		return m.DstFilename
	}
	return ""
}

func (m *FileTrans) GetFileContent() []byte {
	if m != nil {
		return m.FileContent
	}
	return nil
}

// 脚本执行
type ScriptRun struct {
	Scriptname           string   `protobuf:"bytes,1,opt,name=Scriptname,proto3" json:"Scriptname,omitempty"`
	Argvs                []string `protobuf:"bytes,2,rep,name=Argvs,proto3" json:"Argvs,omitempty"`
	Taskid               string   `protobuf:"bytes,3,opt,name=Taskid,proto3" json:"Taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScriptRun) Reset()         { *m = ScriptRun{} }
func (m *ScriptRun) String() string { return proto.CompactTextString(m) }
func (*ScriptRun) ProtoMessage()    {}
func (*ScriptRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab3fb7ffd345c3b, []int{4}
}

func (m *ScriptRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScriptRun.Unmarshal(m, b)
}
func (m *ScriptRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScriptRun.Marshal(b, m, deterministic)
}
func (m *ScriptRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScriptRun.Merge(m, src)
}
func (m *ScriptRun) XXX_Size() int {
	return xxx_messageInfo_ScriptRun.Size(m)
}
func (m *ScriptRun) XXX_DiscardUnknown() {
	xxx_messageInfo_ScriptRun.DiscardUnknown(m)
}

var xxx_messageInfo_ScriptRun proto.InternalMessageInfo

func (m *ScriptRun) GetScriptname() string {
	if m != nil {
		return m.Scriptname
	}
	return ""
}

func (m *ScriptRun) GetArgvs() []string {
	if m != nil {
		return m.Argvs
	}
	return nil
}

func (m *ScriptRun) GetTaskid() string {
	if m != nil {
		return m.Taskid
	}
	return ""
}

// 脚本执行返回
type ScriptRunRsp struct {
	RunRsp               string   `protobuf:"bytes,1,opt,name=RunRsp,proto3" json:"RunRsp,omitempty"`
	Taskid               string   `protobuf:"bytes,2,opt,name=Taskid,proto3" json:"Taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScriptRunRsp) Reset()         { *m = ScriptRunRsp{} }
func (m *ScriptRunRsp) String() string { return proto.CompactTextString(m) }
func (*ScriptRunRsp) ProtoMessage()    {}
func (*ScriptRunRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab3fb7ffd345c3b, []int{5}
}

func (m *ScriptRunRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScriptRunRsp.Unmarshal(m, b)
}
func (m *ScriptRunRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScriptRunRsp.Marshal(b, m, deterministic)
}
func (m *ScriptRunRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScriptRunRsp.Merge(m, src)
}
func (m *ScriptRunRsp) XXX_Size() int {
	return xxx_messageInfo_ScriptRunRsp.Size(m)
}
func (m *ScriptRunRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ScriptRunRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ScriptRunRsp proto.InternalMessageInfo

func (m *ScriptRunRsp) GetRunRsp() string {
	if m != nil {
		return m.RunRsp
	}
	return ""
}

func (m *ScriptRunRsp) GetTaskid() string {
	if m != nil {
		return m.Taskid
	}
	return ""
}

func init() {
	proto.RegisterType((*Heartbeat)(nil), "msg.Heartbeat")
	proto.RegisterType((*ShellRun)(nil), "msg.ShellRun")
	proto.RegisterType((*ShellRunRsp)(nil), "msg.ShellRunRsp")
	proto.RegisterType((*FileTrans)(nil), "msg.FileTrans")
	proto.RegisterType((*ScriptRun)(nil), "msg.ScriptRun")
	proto.RegisterType((*ScriptRunRsp)(nil), "msg.ScriptRunRsp")
}

func init() { proto.RegisterFile("rinck.proto", fileDescriptor_cab3fb7ffd345c3b) }

var fileDescriptor_cab3fb7ffd345c3b = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x46, 0x54, 0xf5, 0xa5, 0x93, 0x85, 0x50, 0x84, 0x10, 0x8a, 0x32, 0x65, 0x62,
	0x61, 0x63, 0x00, 0xa1, 0x22, 0xc4, 0x6c, 0x77, 0x61, 0x74, 0x5d, 0xab, 0x58, 0x4d, 0x9c, 0x60,
	0x5f, 0x90, 0xf8, 0xf7, 0xc8, 0xb5, 0x13, 0xcc, 0x40, 0xb7, 0xfb, 0x5e, 0xee, 0xbd, 0xe8, 0x9d,
	0xa1, 0xb0, 0xda, 0xc8, 0xe3, 0xdd, 0x60, 0x7b, 0xec, 0x69, 0xde, 0xb9, 0x43, 0xfd, 0x04, 0xe4,
	0x4d, 0x09, 0x8b, 0x3b, 0x25, 0x90, 0x5e, 0xc1, 0x92, 0xa3, 0xc0, 0xd1, 0x95, 0x59, 0x95, 0x35,
	0x84, 0x45, 0xa2, 0xd7, 0xb0, 0xe2, 0xdf, 0x46, 0xa2, 0xee, 0x54, 0xb9, 0x38, 0x7d, 0x99, 0xb9,
	0x7e, 0x80, 0x15, 0xff, 0x50, 0x6d, 0xcb, 0x46, 0xe3, 0xfd, 0x6c, 0x34, 0xb2, 0xdb, 0x4f, 0xfe,
	0x40, 0x5e, 0xdf, 0x0a, 0x77, 0xd4, 0xfb, 0xe8, 0x8e, 0x54, 0x6f, 0xa0, 0x98, 0xbc, 0xcc, 0x0d,
	0xf4, 0x06, 0x48, 0x30, 0x30, 0x37, 0xc4, 0x84, 0x5f, 0xe1, 0xdf, 0x90, 0x4f, 0x20, 0xaf, 0xba,
	0x55, 0x5b, 0x2b, 0x8c, 0xa3, 0x15, 0x14, 0xdc, 0x4a, 0xcf, 0x46, 0x74, 0x2a, 0x86, 0xa4, 0x92,
	0xdf, 0x78, 0x71, 0x38, 0x6f, 0x84, 0xac, 0x54, 0xf2, 0x1b, 0x7e, 0xde, 0xf4, 0x06, 0x95, 0xc1,
	0x32, 0xaf, 0xb2, 0x66, 0xcd, 0x52, 0xa9, 0x7e, 0x07, 0xc2, 0xa5, 0xd5, 0x03, 0xfa, 0xd2, 0xb7,
	0x00, 0x01, 0x92, 0x3f, 0x26, 0x0a, 0xbd, 0x84, 0x8b, 0x67, 0x7b, 0xf8, 0x72, 0xe5, 0xa2, 0xca,
	0x1b, 0xc2, 0x02, 0x24, 0x6d, 0xf2, 0x3f, 0x6d, 0x1e, 0x61, 0x3d, 0x47, 0xc7, 0xd6, 0x61, 0x4a,
	0x4e, 0x7a, 0xe6, 0x1a, 0xbb, 0xe5, 0xe9, 0x6d, 0xef, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x92,
	0x8d, 0x0e, 0xcc, 0xea, 0x01, 0x00, 0x00,
}
